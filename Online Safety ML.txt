-------------- DevFest 2020 Online Safety : Machine Learning -------------------

Challenger: Benkacir Yasmine

Dataset :

Train, Dev and Test Data: 
	Train = 60%
	Dev= 20%
	Test= 20%

Pour la calssification j'ai utilisé les deux colonnes "class" et "tweet".

J'ai commencé d'abrod par le pretraitement des données en utilisant les diff bibs (nltk, string, re): 

	1. Elimination des données dupliqués
	2. Suppression des instances NaN
	3. Normalisation en miniscule des caracteres 
	4.Suppression des Usernames, hashtags de Twitter
	5. Suppression des URL's dans les tweets
	6. Elimination de la ponctuation des caracteres sepciaux s
	7. une lemmatisation en utilisant WordNetLemmatizer de la bib Nltk 
# Le pretraitement a etait utilisé dans le but de "nettoyer" le dataset et diminué le bruit et donc eventuellement obtenir de meilleur resultats de classification 

Les algorithmes testés sont des algorithmes de la bib Scikit-learn:
	. MultinomialNB
	. BernoulliNB
	. Decision Tree
	. RandomForest
	. SVM
Les tests ont montrés que SVM et RandomForest ont données la meilleure accuracy qui est de 88% (avec les paramateres par defaut), donc j'ai utilisé GridSearch pour trouvé les bonnes valeurs des parametres pour les deux algorithmes dans le but d'ameliorer l'accuracy . 

Pour la fonction de ponderation j'ai utilisé le TF-idf vectorizer avec les arguments suivant : 
Stopwords 
max_features= 4000 (le choix de cette valeurs a etait fait apres test des differents valeurs) 
ngram_range=(1,2) ( c'est le N-grammes qui a donnés les meilleures resultats avec (1,3) )

---------------------------------------------------
L'algorithme qui a donné le meilleure resultat avec les meilleures features est SVM avec :   - Accuracy= 89% 
											     - F1-score = 88%
											     - Recall = 89%
											     - Precision = 88%

